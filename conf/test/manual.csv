EntityType,CaseID,Component,Description,StepNumber,StepDescription,ExpectedResult,TestType,Status,FeatureID,PreCondition,PostCondition,TestScriptEntry,TestScriptExpectResult
TestScript,ethernet_connect_internet,COMMS/Ethernet,check internet connection via ethernet,1,Ensure ethernet cable is connceted to Internet,,FVT,ready,IOTOS-461,,,,
TestStep,,,,2,Plug the other port to IoT device,,,,,,,,
TestStep,,,,3,Check if wget http://www.kernel.org/pub/linux/bluetooth/bluez-5.30.tar.xz,wget command works,,,,,,,
TestScript,bt_gatt_write_handle,COMMS/Bluetooth,use gatttool to write IoT BLE handle value,1,IoT device does ble advertising. Command is: hciconfig hci0 leadv,,EFT,design,IOTOS-456,,,,
TestStep,,,,2,"On Host, gatttool -b <iot BT MAC> --characteristics",,,,,,,,
TestStep,,,,3,"In the characteristics list, use a handle to see its value. Command is:
gatttool -b <iot BT MAC> --char-read -a <handle>",,,,,,,,
TestStep,,,,4,"Write new value into the handle by:
gatttool -b <iot BT MAC> --char-write-req -a <handle> -n abcd",return write success,,,,,,,
TestStep,,,,5,"Read this handle again.
gatttool -b <iot BT MAC> --char-read -a <handle>",the value has been modified to 'ab cd ...',,,,,,,
TestScript,comm_rs232_debugging,COMMS/rs232,connect rs232 cable for debugging,1,Plug RS232 cable to the main-board,,FVT,ready,IOTOS-379,,,,
TestStep,,,,2,Check by minicom on PC to get the debugging output,info could be output on minicom,,,,,,,
TestScript,comm_rs232_usb_to_serial,COMMS/rs232,Plug usb port to IoT and plug rs232 to PC,1,Plug usb port to IoT device ,,FVT,ready,IOTOS-381,,,,
TestStep,,,,2,plug rs232 (with rs232-com cable) to the COM of PC,,,,,,,,
TestStep,,,,3,Run serial-test (source code is in attachment of the feature 381) on IoT device: serial-test /dev/ttyUSB0,,,,,,,,
TestStep,,,,4,"On the other part, plug the serial port to a PC, launch COM1 with 115200. Enter YooHoo","minicom echoes ""2U2"". ",,,,,,,
TestScript,VirtualBox_VM_Support,BSP / Other,The product shall run on a VirtualBox VM,1,put vdi image in virtualbox and run sanity test cases,No specific bugs for virtualbox,FVT,ready,IOTOS-467,,,,
TestScript,PREMIRRORS_distro_configuration,OS / Distro Configuration,To check CI shall provide a source archive for Ostro releases,1,Check meta-ostro/conf/distro/ostro.conf has configuration about PREMIRRORS(SOURCE_MIRROR_URL) ,Has this configuration,FVT,ready,IOTOS-788,,,,
TestStep,,,,2,Check the archive source are located in SOURCE_MIRROR_URL,See archived source code in the url ,,,,,,,
TestScript,documentation_REST_APIs,Documentation,To check the docs of REST API,1,Check doc files in https://github.com/01org/iot-rest-api-server/tree/master/doc,See raml files ,FVT,ready,IOTOS-560,,,,
TestScript,dev_image_integration,OS / Image Configuration,To check dev image is bootable and related packages are inclued,1,Download dev image and install it on P1 platforms to check it can boot successfully,dev image boot successfully,FVT,design,IOTOS-784,,,,
TestStep,,,,2,"Check related packages(packagegroup-core-buildessential,smartpm,git,gdb,valgrind) are installed",packages are installed in image,,,,,,,
TestScript,dev_image_build_app,OS / Image Configuration,To check if user can build app in Ostro,1,"boot up Ostro and use ""git clone <project URL>"" to get some project codes into Ostro","the source repo can be downloaded with git",EFT,design,IOTOS-784,,,,
TestStep,,,,2,"according to build instrumentation in README, do make/make check/make install","the application can be built and installed into Ostro successfully",,,,,,,
TestScript,dev_image_debug_app,OS / Image Configuration,To check if user can debug app in Ostro,1,"boot up Ostro and use ""git clone <project URL>"" to get some project codes into Ostro","the source repo can be downloaded with git",EFT,design,IOTOS-784,,,,
TestStep,,,,2,"build with -g option","the application can be built successfully",,,,,,,
TestStep,,,,3,"debug with""gdb <app> ""; set break point; list codes and variables; step into libs...","the gdb can be used to debug applications",,,,,,,
TestScript,dev_image_valgrind_debug,OS / Image Configuration,To check if user can debug app with valgrind in Ostro,1,"boot up Ostro and use ""git clone <project URL>"" to get some project codes into Ostro","the source repo can be downloaded with git",EFT,design,IOTOS-784,,,,
TestStep,,,,2,"build with -g option","the application can be built successfully",,,,,,,
TestStep,,,,3,"run app with valgrind: ""valgrind --tool=memcheck --leak-check=full <app> ""to check memory leak","there app memory use report shows on console",,,,,,,
TestScript,dev_image_workable,OS / Image Configuration,To check dev image is bootable and SSH/serial/system log ready,1,Download dev image and install it on P1 platforms to check it can boot successfully,dev image boot successfully,FVT,ready,IOTOS-401,,,,
TestStep,,,,2,"Check SSH connection to Ostro","Ostro can be connected successfully; no further setup need",,,,,,,
TestStep,,,,3,"Check serial port connection to Ostro","Ostro can be connected successfully; no further setup need",,,,,,,
TestStep,,,,4,"Check system log enabled in Ostro: a. /run/log/journal; b. run command ""journalctl""","the system log tool and folder should be in and user can use journalctl to check logs",,,,,,,
TestScript,documentation_How to build/modify Ostro OS,Documentation,To check the Instruction correctness,1,Check the doc mentioned in this Requirement,The doc instruction is correct,FVT,design,IOTOS-835,,,,
TestScript,documentation_Supported_HW_platforms,Documentation,To check the Instruction correctness,1,make sure platform description is accurate and the links provided are correct,The doc is correct,FVT,ready,IOTOS-837,,,,
TestScript,sol_oic_find_single_resource,COMMS/Iotivity,Use soletta node type API to find single oic resource,1,"Put 3 test files ('light-client.fbp', 'light-server.fbp' and 'sol-flow.json' from soletta source src/examples/flow/oic/) to IoT device /home/root/ folder. ",,EFT,design,IOTOS-1019,,,,
TestStep,,,,2,"In the IoT device, it should be able to run fbp file. Then, run:
> export SOL_MACHINE_ID=""580a3d6a9d194a23b90a24573558d2f4""
> ./light-server.fbp",The light-server is able to be setup. And no anything output.,,,,,,,
TestStep,,,,3,"In another terminal, run: ./light-client.fbp","After client running, both client and server part will output continousely:
LightState true (boolean)
LightState false (boolean)",,,,,,,
TestScript,sol_oic_find_multiple_resource,COMMS/Iotivity,Use soletta node type API to scan multiple oic resource,1,Put 2 test files ('light-scan/light-client-scan.fbp' and 'light-scan/sol-flow.json' from soletta source src/examples/flow/oic/) to IoT device /home/root/ folder. ,,EFT,design,IOTOS-1019,,,,
TestStep,,,,2,Put light-server.fbp to at least 2 IoT devices. ,,,,,,,,
TestStep,,,,3,"In the 2 IoT devices, start light-server with different id:
> export SOL_MACHINE_ID=""580a3d6a9d194a23b90a24573558d2f4""
> ./light-server.fbp","On 2 devices, the light-server is able to be setup. And no anything output.",,,,,,,
TestStep,,,,4,"In another terminal, run: ./light-client-scan.fbp to scan all resources. ",The 2 light-server should be found. ,,,,,,,
TestScript,eSDK_installation,eSDK,"Install eSDK on host machine (host OS: Ubuntu, Debian, Fedora, CentOS, OpenSUSE)",1,run esdk-test.sh to download and install the latest eSDK release,eSDK installation and environment preparation are successful,EFT,ready,IOTOS-775,,,,
TestScript,eSDK_build_ostro_image,eSDK,Build ostro image with default configuration from eSDK,1,"run ""source environment-setup-{target platform}-ostro-linux"" under sdk installation folder",SDK toolkit devtool exec path added,FVT,ready,IOTOS-775,,,,
TestStep,,,,2,"run ""devtool build-image ostro-image"" to build out ostro image",Ostro image can be built out,,,,,,,
TestScript,eSDK_build_app,eSDK,Add source and build application in eSDK,1,"run ""devtool add {testapp recipe} {test recipe source tree}",new recipe added in workspace/appends,EFT,ready,IOTOS-775,,,,
TestStep,,,,2,"edit the appended recipe about how to build and installation parts, then run ""devtool {testapp}"" command",the testapp can be built out by eSDK. ,,,,,,,
TestScript,eSDK_update,eSDK,update eSDK,1,"run ""devtool sdk-update {latest eSDK url}"" command",eSDK installed should be upgrade if new version published,EFT,ready,IOTOS-775,,,,
TestScript,Binary_distribution,SCM / Build Tools,,1,"check if there are different binaries published on download.ostroproject.org server: a. flashable images for beaglebone/intel-corei7-64/intel-quark/edison; b. eSDK binaries in sdk-ext.Check if the Ostro binaries are published on Ostro server",the images are in ostro server,FVT,ready,IOTOS-439,,,,
TestScript,Beaglebone_platform_Support,bsp,To check Beaglebone support in system,1,Run sanity test cases on edison,All cases should be passed,FVT,ready,IOTOS-448,,,,
TestScript,Edison_BSP_Support,bsp,To check ediosn bsp support in system,1,Run sanity test cases on edison,All cases should be passed,FVT,ready,IOTOS-713,,,,
TestScript,MinnowBoard_Support,bsp,To check minnowboard support,1,Run sanity test cases on Minnow board,All cases should be passed,FVT,ready,IOTOS-449,,,,
TestScript,GB_BXBT_Support,bsp,To check GB_BXBT support,1,Run sanity test cases on GB-BXBT,All cases should be passed,FVT,ready,IOTOS-553,,,,
TestScript,Galileo_Support,bsp,To check Galileo Gen2 support,1,Run sanity test cases on Galileo Gen2,All cases should be passed,FVT,ready,IOTOS-390,,,,
TestStep,,,,2,check images from image url,See different image generated from different branch,,,,,,,
TestScript,Source_code_build,SCM / Build Tools,To check bitbake can build image,1,bitbake imge with code,build image successfully ,FVT,ready,IOTOS-438,,,,
TestScript,Source_code_distribution,SCM / Build Tools,check Ostro publish server download.ostroproject.org distribute the source codes of Ostro image,1,"check there are Ostro source codes listed in ""sources"" folder",the source codes are in Ostro server,FVT,ready,IOTOS-438,,,,
TestScript,Build_history_detail_info,SCM / Build Tools,To check build detail info is stored,1,git clone buildhistory.git,clone successfully,FVT,ready,IOTOS-778,,,,
TestStep,,,,2,checkout to different branch to check the git logs,See meta information of different branch,,,,,,,
TestScript,CI_enable_enabled_security_scan,SCM / Backend Services Configuration,CI system should perform automatically instrumented builds with security scan,1,check tasks enabled in CI,tasks are enabled,FVT,ready,IOTOS-780,,,,
TestScript,documentation_OIC_JS_API,Documentation,To check the docs of OIC JS API,1,Check spec files ,see md files with API description ,FVT,ready,IOTOS-1178,,,,
TestScript,documentation_Configuration_Management_FW_Design,Documentation,To check the docs of Configuration Management FW Design,1,Check the doc ,the doc has content about the design of Configuration Management FW ,FVT,ready,IOTOS-711,,,,
TestScript,Boot Mode auto chosen,Software Update,Select a bootloader that can dynamically choose the boot mode,1,check related docs ,verify that uefi stub is selected for uefi compatible machines and uboot for the rest,FVT,ready,IOTOS-743,,,,
TestScript,CI_Monitor_Multi_branch,SCM / Backend Services Configuration,To check CI can monitor multi-branches to build image,1,check branches in ostro-os repo,See multi-branches,FVT,ready,IOTOS-782,,,,
TestScript,build_uninative_tarball,SCM / Build Tools,build uninative tarball,1,"fetch ostro-os source codes and build uninative tarball with command: bitbake uninative-tarball",,EFT,ready,IOTOS-1208,,,,
TestStep,,,,2,check the correct 64bit/32bit source can be fetched and uninative tarball can be built out,"when fetch source codes, you can check the checksum (stored in meta/conf/distro/include/yocto-uninative.inc) according to build machine arch; and the ""uninative-tarball"" folder created under build/tmp-glibc/work/<build-machine-arch>",,,,,,,
TestScript,check_uninative_in_sstate,SCM / Build Tools,check the uninative can be deployed,1,clean up the sstate: e.g. rm build/sstate-cache,,EFT,ready,IOTOS-1208,,,,
TestStep,,,,2,"build image or project with ""bitbake <i.e. ostro-image or soletta>""","after build done,""in the build/sstate-cache"", there is ""universal"" folder, which including the ""-native"" package cache",,,,,,,
TestScript,check_uninative_in_sstate_mirror,SCM / Build Tools,check the uninative can be deployed,1,clean up the sstate: e.g. rm build/sstate-cache,,FVT,ready,IOTOS-1208,,,,
TestStep,,,,2,"set up ""SSTATE_MIRROR ?= file://.* http://download.ostroproject.org/sstate/ostro-os/PATH"" in build/conf/local.conf",,,,,,,,
TestStep,,,,3,"build image or project with ""bitbake <i.e. ostro-mage or soletta>""","after build done,in the build/sstate-cache, there is ""universal"" folder. However, no ""-native"" package cache in the folder at all. ",,,,,,,
TestScript,test_bluez_spp_profile,Bluetooth,check bluetooth spp profile enabled in ostro,1, run test-profile –u 00001101-0000-1000-8000-00805f9b34fb on ostro DUT which can be downloaded from http://git.kernel.org/cgit/bluetooth/bluez.git/tree/test/test_profile,The command gives no error and process doesn't quit,FVT,ready,IOTOS-1690,,,,
TestStep,,,,2,"Do “connmanctl enable bluetooth”, “bluetoothctl”, “agent on”, “discoverable on”, “pairable on” on both ostro and reference bluetooth device.",No error message on the console,,,,,,,
TestStep,,,,3,Do “scan on” on refence bluetooth device.,Ostro-gt DUT should can be scanned out,,,,,,,
TestStep,,,,4,Do “pair MACofOstro” and input yes if need,pair should succeed,,,,,,,
TestStep,,,,5,Run “info MACofOstro”,"the UUID of Serial Port should print out, like UUID: Serial Port {00001101-0000-1000-8000-00805f9b34fb}",,,,,,,
TestScript,test_bluez_hid_profile_kb,Bluetooth,check bluetooth hid profile through BT keyboard,1,enable bluetooth through connmanctl enable bluetooth,bluetooth enabled successfully,FVT,ready,IOTOS-1689,,,,
TestStep,,,,2,scan on to detect BT keyboard and pair/connect it,BT keyboard should connected after input pin code using it,,,,,,,
TestStep,,,,3,Use BT keyboard to input on DUT console,The connect BT keyboard should work same as a wired keyboard,,,,,,,
TestScript,test_bluez_hid_profile_mouse,Bluetooth,check bluetooth hid profile through BT mouse,1,enable bluetooth through connmanctl enable bluetooth,bluetooth enabled successfully,FVT,ready,IOTOS-1689,,,,
TestStep,,,,2,scan on to detect BT mouse and pair/connect it,BT mouse should can connect smoothly,,,,,,,
TestStep,,,,3,Use BT mouse to click on DUT GUI console,The connect BT mouse should work same as a wired mouse,,,,,,,
TestScript,test_swupd_remote,Software Update,Full update using swupd,1,Try to modify existing files and it should be forbidden,fail to modify existing files in system.,FVT,ready,"IOTOS-970, IOTOS-1289",,,,
TestStep,,,,2,Check existing file using command getfattr -d -m . path_to_file to make sure IMA/SMACK is enabled.,,,,,,,,
TestStep,,,,3,"use ""swupd verify"" to make sure current flashed image is in good status for swupdate",0 file shoud mismatch,,,,,,,
TestStep,,,,4,"apply update task using ""swupd_update -v -c"" and make sure update complete successfully, this will redownload the update repo",the update should complete successfully and corresponding files are changed,,,,,,,
TestStep,,,,5,"do ""swupd verify"" to check system is same as official image",check system should be in good status,,,,,,,
TestStep,,,,6,"if UEFI partition get updated(check commits messages), do ""fdisk -l"" to find which disk image is on, like /dev/sda.",the command should give proper output,,,,,,,
TestStep,,,,7,"do ""sgdisk -p /dev/sda"" before update and after reboot to check UEFI partition switched to new one.","EFI systems should change to new one, refer IOTOS-1358 for comparison",,,,,,,
TestStep,,,,8,"run ""uname -a"" to make sure the kernel is latest in ostro",the kernel should be the newest that ostro updated.,,,,,,,
TestStep,,,,9,repeat step 1),fail to modify existing files in system.,,,,,,,
TestScript,test_swupd_local_build,Software Update,Verify swupd using local built update repo,1,"Modify conf/local.conf to set OS_VERSION ?= ""320""",,FVT,design,"IOTOS-970, IOTOS-1290",,,,
TestStep,,,,2,"bitbake ostro-image-swupd-dev, check image is created. Install the image to DUT.",Image should be created and can be boot up DUT with it.,,,,,,,
TestStep,,,,3,modify meta-iotqa/recipes-core/packagegroup/packagegroup-qa-tests.bb to add mraa-test.,,,,,,,,
TestStep,,,,4,"Modify conf/local.conf to set OS_VERSION ?= ""330""",,,,,,,,
TestStep,,,,5,bitbake ostro-image-swupd-dev and check update repo generated at like tmp-glibc/deploy/swupd/intel-corei7-64/ostro-image-swupd/www/,upate repo should can be created,,,,,,,
TestStep,,,,6,go to www folder and run python -m SimpleHTTPServer 8000.,the repo can be accessed by http://IP:8000,,,,,,,
TestStep,,,,7,Do swupd verify using this url.,the result should be no mismatch found.,,,,,,,
TestStep,,,,8,"Do swupd update, update should succeed by double check with swupd verify.",,,,,,,,
TestScript,test_swupd_bundle-remove,Software Update,Remove bundle using swupd bundle-remove,1,Install latest image on DUT,no error should be shown in log,EFT,ready,"IOTOS-1290, IOTOS-1289, IOTOS-1223",,,,
TestStep,,,,2,go to /usr/share/clear/bundles to check which bundles are in image,,,,,,,,
TestStep,,,,3,use swupd bundle-remove world-dev to remove this bundle. This command will say bundle removed and untracked.,Check files listed in https://download.ostroproject.org/updates/ostro-os/builds/intel-quark/ostro-image-swupd/4630/Manifest.world-dev should all removed,,,,,,,
TestScript,test_swupd_bundle-add,Software Update,Add bundle using swupd bundle-add,1,First remove world-dev bundle and make sure related files are removed,no error should be shown in log,EFT,ready,"IOTOS-1290, IOTOS-1289, IOTOS-1223",,,,
TestStep,,,,2,Use swupd bundle-add world-dev --url=** to add the bundle back., It will download the bundle pack from the url and install them.check files listed in https://download.ostroproject.org/updates/ostro-os/builds/intel-quark/ostro-image-swupd/4630/Manifest.world-dev are all added back.,,,,,,,
TestScript,test_swupd_bundle_shared_contents,Software Update,Check shared contents' behavior when removed the bundles and add the bundles back,1,check /usr/share/clear/bundles. Run hello-bundle-a and hello-bundle-b,bundle qa-bundle-a should exist while qa-bundle-b not. Hello-bundle-a should give output properly and hello-bundle-b can't be found.,EFT,ready,"IOTOS-1290, IOTOS-1289, IOTOS-1223",,,,
TestStep,,,,2,swupd bundle-add qa-bundle-b –url=url_to_swupd_repo,verify qa-bundle-b successfully added by run hello-bunlde-b which should give output properly.,,,,,,,
TestStep,,,,3,swupd bundle-remove qa-bundle-a –url=url_to_swupd_repo,verify qa-bundle-a is successfully removed by run hello-bundle-b which can't be found.,,,,,,,
TestStep,,,,4,run hello-bundle-b and hello-bundle-s,both these two binaries should give properly output,,,,,,,
TestStep,,,,5,swupd bundle-remove qa-bundle-b –url=url_to_swupd_repo,verify qa-bundle-b successfully removed by run hello-bunlde-b which can't be found.,,,,,,,
TestStep,,,,6,run hello-bundle-s,Hello-bundle-s should can't be found since qa-bundle-a and qa-bundle-b are both removed,,,,,,,
TestStep,,,,7,add bundle qa-bundle-a and qa-bundle-b back,"verify qa-bundle-a, qa-bundle-b successfully added by run hello-bunlde-a/hello-bundle-b which should give output properly.",,,,,,,
TestScript,test_bundle_remove_before_swupd,Software Update,Check removed bundle not exist after swupd update but can be add back,1,check /usr/share/clear/bundles. Run hello-bundle-a and hello-bundle-b,bundle qa-bundle-a should exist while qa-bundle-b not. Hello-bundle-a should give output properly and hello-bundle-b can't be found.,EFT,ready,"IOTOS-1290, IOTOS-1289, IOTOS-1223",,,,
TestStep,,,,2,add bundle qa-bundle-b by swupd bundle-add qa-bundle-b –url=url-to-swupd-repo,verify qa-bundle-b successfully added by run hello-bunlde-b which should give output properly.,,,,,,,
TestStep,,,,3,remove bundle qa-bundle-a by swupd bundle-remove qa-bundle-a –url=url-to-swupd-repo,verify qa-bundle-a is successfully removed by run hello-bundle-a which can't be found.,,,,,,,
TestStep,,,,4,do swupd to update to latest version,verify qa-bundle-a doesn't exist since it's removed before swupd update.,,,,,,,
TestStep,,,,5,add bundle qa-bundle-a back,verify qa-bundle-a successfully added by run hello-bunlde-a which should give output properly.,,,,,,,
TestScript,test_bundle_content_update_between_images,Software Update,Check bundle contents changed as expected after swupd update if related files changed,1,check /usr/share/clear/bundles. Run hello-bundle-a.,bundle qa-bundle-a should exist. Hello-bundle-a should give output properly.,EFT,ready,"IOTOS-1290, IOTOS-1289, IOTOS-1223",,,,
TestStep,,,,2,update qa-bundle-a content files. Like modify hello-bundle-a.c. Submit PR in meta-iotqa and then wait for new images included this PR.,check output of hello-bundle-a changes.,,,,,,,
TestStep,,,,3,do swupd update to the image which include changes in step 2).,image should updated to target version.,,,,,,,
TestStep,,,,4,"run hello-bundle-a again,",Check the output of hello-bundle-a changes from previous image.,,,,,,,
TestScript,test_bundle_content_change_when_bundle_readd,Software Update,Check removed bundle updated to latest version when adding it back after swupd update,1,check /usr/share/clear/bundles. Run hello-bundle-a.,bundle qa-bundle-a should exist. Hello-bundle-a should give output properly.,EFT,ready,"IOTOS-1290, IOTOS-1289, IOTOS-1223",,,,
TestStep,,,,2,update qa-bundle-a content files. Like modify hello-bundle-a.c. Submit PR in meta-iotqa and then wait for new images included this PR.,,,,,,,,
TestStep,,,,3,remove bundle qa-bundle-a by swupd bundle-remove qa-bundle-a –url=url-to-swupd-repo,verify qa-bundle-a doesn't exist since it's removed.,,,,,,,
TestStep,,,,4,do swupd update to the image which include changes in step 2).,verify qa-bundle-a doesn't exist since it's removed before swupd update.,,,,,,,
TestStep,,,,5,Add qa-bundle-a back and run hello-bundle-a again.,Check the output of hello-bundle-a changes from previous image.,,,,,,,
TestScript,multilib_integration,SCM / Build Tools,check if the multilib can be built by ostro build environment,1,get the ostro-os git repo,,FVT,ready,IOTOS-716,,,,
TestStep,,,,2,"add ""require conf/ostro-multilib.conf"" to your build/conf/local.conf, then build ostro-image",the ostro-image can be built successfully,,,,,,,
TestScript,secure_boot_unsigned,Security,check if Ostro supports secure boot,1,Create and sign certificates; install signing key to bios following the docs fom ostroproject/meta-ostro/blob/master/doc/howtos/uefi-secure-boot.rst,,FVT,design,"IOTOS-409,IOTOS-410,IOTOS-411",,,,
TestStep,,,,2,"Boot an unsigned image (default)", "image fails to boot: ""Invalid signature detected. Check Secure Boot Policy in Setup""",,,,,,,
TestScript,secure_boot_wrong_key,Security,check if Ostro supports secure boot,1,Create and sign certificates; install signing key to bios following the docs fom ostroproject/meta-ostro/blob/master/doc/howtos/uefi-secure-boot.rst,,FVT,design,"IOTOS-409,IOTOS-410,IOTOS-411",,,,
TestStep,,,,2,Generate a new key and sign an image with this key,signing succeeds,,,,,,,
TestStep,,,,3,try to boot the image,"image fails to boot: ""Invalid signature detected. Check Secure Boot Policy in Setup""",,,,,,,
TestScript,secure_boot_support,Security,check if Ostro supports secure boot,1,Create and sign certificates; install signing key to bios following the docs fom ostroproject/meta-ostro/blob/master/doc/howtos/uefi-secure-boot.rst,,FVT,design,"IOTOS-409,IOTOS-410,IOTOS-411",,,,
TestStep,,,,2,Sign an image with the initially generated key,signing succeeds,,,,,,,
TestStep,,,,3,try to boot the image,the ostro-image boots successfully,,,,,,,
TestScript,sda_program_fbp,Soletta,edit/run fbp file in soletta-dev-app,1,"setup firewall to let soletta-app-server to accept request: ""iptables -A INPUT -p tcp -m tcp --dport <port> -j ACCEPT""",,FVT,design,IOTOS-1468,,,,
TestStep,,,,2,"start up soletta-dev-app server: ""$ systemctl start soletta-dev-app-server.service""", "check the server started by ""$ ps | grep node""; there should be a node process started",,,,,,,
TestStep,,,,3,"launch a web browser in another host machine, i.e. chrome or firefox; and input address: http://<ostro-ip-addres>:<port>", "soletta dev app web page shows up",,,,,,,
TestStep,,,,4,"in ""code viewer"" area to edit fbp file like: _(timer:interval=1000) OUT -> IN _(boolean/toggle:initial_state=true) OUT -> IN _(console)", "fbp can be input and relevant SVG node connection picture generated in ""SVG panel""",,,,,,,
TestStep,,,,5,"click run button on the top-right", "the fbp app is running and run log print in a pop up window",,,,,,,
TestStep,,,,6,"click Close button in run window", "the fbp app will be stopped soon",,,,,,,
TestScript,sda_fbp_syntax_check,Soletta,test syntax check in soletta-dev-app code viewer,1,"setup firewall to let soletta-app-server to accept request: ""iptables -A INPUT -p tcp -m tcp --dport <port> -j ACCEPT""",,FVT,design,IOTOS-1468,,,,
TestStep,,,,2,"start up soletta-dev-app server: ""$ systemctl start soletta-dev-app-server.service""", "check the server started by ""$ ps | grep node""; there should be a node process started",,,,,,,
TestStep,,,,3,"launch a web browser in another host machine, and edit a fbp app in ""code viewer""", "if input unkown/not-support node/para names; there is syntax error mark (X) shows on the left of line. mouse float on the mark there is syntax error messages show up",,,,,,,
TestScript,sda_layout_check,Soletta,change soletta-dev-app layout,1,"setup firewall to let soletta-app-server to accept request: ""iptables -A INPUT -p tcp -m tcp --dport <port> -j ACCEPT""",,FVT,design,IOTOS-1468,,,,
TestStep,,,,2,"start up soletta-dev-app server: ""$ systemctl start soletta-dev-app-server.service""", "check the server started by ""$ ps | grep node""; there should be a node process started",,,,,,,
TestStep,,,,3,"launch a web browser in another host machine, and click top-right buttons to collapse/expand ""code viewer panel"", ""SVG panel"" and ""projects panel""", "the panels can be expand or collapse. Default is expand all panels",,,,,,,
TestScript,sda_tab_check,Soletta,"check other tabs except ""Editor"" tab",1,"setup firewall to let soletta-app-server to accept request: ""iptables -A INPUT -p tcp -m tcp --dport <port> -j ACCEPT""",,FVT,design,IOTOS-1468,,,,
TestStep,,,,2,"start up soletta-dev-app server: ""$ systemctl start soletta-dev-app-server.service""", "check the server started by ""$ ps | grep node""; there should be a node process started",,,,,,,
TestStep,,,,3,"launch a web browser in another host machine, and click top tab buttons to launch ""Systemd Journal"" tab", "the tab shows fbp app output before",,,,,,,
TestStep,,,,4,"click top tab buttons to launch ""Cheat Sheet"" tab", "the tab shows fbp node API documentation (need internet access)",,,,,,,
TestScript,sda_demo_launch,Soletta,launch build-in demos in soletta-dev-app,1,"setup firewall to let soletta-app-server to accept request: ""iptables -A INPUT -p tcp -m tcp --dport <port> -j ACCEPT""",,FVT,design,IOTOS-1468,,,,
TestStep,,,,2,"start up soletta-dev-app server: ""$ systemctl start soletta-dev-app-server.service""", "check the server started by ""$ ps | grep node""; there should be a node process started",,,,,,,
TestStep,,,,3,"launch a web browser in another host machine, and click ""demo"" in projects panel to expand build-in demos; select one text file and click, i.e. demo/minnow-calamari/calamari-buttons-rgb-led.fbp", "the text file can be import into ""code viewer"" area",,,,,,,
TestStep,,,,4,"select a configuration JSON file (i.e. sol-flow-intel-minnow-max-linux_gt_3_17.json) on top-right drop-down list; the click run button", "the syntax error mark removed and the fbp app can be run",,,,,,,
TestScript,meta_soletta_integration,Soletta,check if ostro-os project involve meta-soletta layer,1,"check ostro-os has integrated meta-soletta project and layer: ostro-os/meta-soletta; ostro-os/conf/combo-layer.conf","relevant meta-soletta should be existed",FVT,ready,IOTOS-1467,,,,
TestScript,cmake_recipe_creation,SCM / Build Tools,Ostro OS repo should support create recipe based on CMakeFile.txt,1,"get ostro-os repo and run ""source oe-init-build-env"" to setup build environment",,FVT,ready,IOTOS-1267,,,,
TestStep,,,,2,"run command: devtool add soletta-demos ""git://github.com/solettaproject/soletta-demos""", "there is a recipe generated successfully",,,,,,,
TestStep,,,,3,"check recipe according to soletta-demos/CMakeLists.txt", "the depdencies in CMakeLists.txt should be detected or listed in recipe ""DEPENDS = "" ",,,,,,,
TestScript,npm_installation,SCM / Build Tools,Ostro OS repo should handle node.js module (NPM) dependency fetch,1,"get ostro-os repo and run ""source oe-init-build-env"" to setup build environment",,FVT,ready,"IOTOS-1146,IOTOS-1266",,,,
TestStep,,,,2,"run command: devtool add npm-forever ""npm://registry.npmjs.org;name=forever;version=0.15.1""", "there is a node.js module recipe generated successfully",,,,,,,
TestStep,,,,3,"build the module by ""bitbake npm-forever""", "it can build node.js module successfully and no need to fetch dependency npm package out of bitbake process ",,,,,,,
TestScript,recipe_creation_config_dependency_detect,SCM / Build Tools,Ostro OS repo should detect all mandatory and optional dependencies defined in configure.in/ac,1,"get ostro-os repo and run ""source oe-init-build-env"" to setup build environment",,FVT,ready,IOTOS-1268,,,,
TestStep,,,,2,"run command: devtool add powertop ""git://github.com/fenrus75/powertop""", "there is a powertop recipe generated successfully",,,,,,,
TestStep,,,,3,"check recipe powertop and comparing to the configure.ac in powertop git repo", "the dependencies can be detected or listed in ""DEPENDS ="" ",,,,,,,
TestScript,create_kernel_recipe,eSDK,check devtool has easy way to create kernel recipe,1,"get ostro-os repo and run ""source oe-init-build-env"" to setup build environment",,FVT,ready,IOTOS-1270,,,,
TestStep,,,,2,"run command ""devtool kernel-menuconfig"" to update kernel configure ", "the kernel recipe in ostro-os/meta/recipes-kernel/linux can be updated based on srctree/.config",,,,,,,
TestScript,build_off-tree_kernel_module,SCM / Build Tools,check how to build off-tree kernel module,1,"get ostro-os repo and run ""source oe-init-build-env"" to setup build environment",,FVT,ready,IOTOS-1269,,,,
TestStep,,,,2,"create sample kernel module source: a. $mkdir /tmp/hellomod; b. $cp ostro-os/meta/lib/oeqa/runtime/files/hellomod.c /tmp/hellomod/; c. cp ostro-os/meta/lib/oeqa/runtime/files/hellomod_makefile /tmp/hellomod/Makefile",,,,,,,,
TestStep,,,,3,"run command ""devtool add hellomod /tmp/hellomod"" ", "the kernel module ""hellomod"" recipe can be created",,,,,,,
TestStep,,,,4,"run command ""bitbake hellomod"" ", "the kernel module ""hellomod.ko"" can be built successfully in /tmp/hellomod",,,,,,,
TestScript,list_bundle_contents,SCM / Build Tools,check if there is mechanism to list bundle contents from YP/bitbake,1,"fetch the bundle manifest file from build download web",,FVT,ready,IOTOS-1223,,,,
TestStep,,,,2,"check if there are different packages listed in different manifest file. And the refererence bundle image should include the least packages",,,,,,,,
TestScript,list_user_added_bundle_contents,SCM / Build Tools,check use added package can be listed,1,"edit ostro-image-swupd.bb to add one package into BUNDLE_CONTENTS[<bundle-name>]",,EFT,ready,IOTOS-1223,,,,
TestStep,,,,2,"then try to use bitbake build swupd image","check if the image manifest file list the user-added package",,,,,,,
TestScript,check_gplv3_free_image,OS / Image Configuration,check image does not include packages under GPLv3 relevant license ,1, "go to https://ostroproject.org/jenkins/view/Code-Analysis/job/code_isafw_reports/ to check la test result for supported platforms","get success in la line",FVT,ready,IOTOS-872,,,,
TestScript,product_image_workable,OS / Image Configuration,To check product image features are workable,1,"build product image: a. git clone ostro-os project; b. edit build/conf/local.conf to uncomment ""require conf/distro/include/ostro-os-production.inc""; c. create IMA keys according to meta-intel-iot-security/meta-integrity/README.md; d. add ""IMA_EVM_KEY_DIR = <you keys> "" in build/conf/local.conf",,FVT,ready,IOTOS-1222,,,,
TestStep,,,,2,"Check serial login disable in image","Ostro cannot be connected by serial port",,,,,,,
TestStep,,,,3,"Check system log is disabled in Ostro: run command ""journalctl""","the system log tool cannot show any log information",,,,,,,
TestStep,,,,4,"check swupd client is integrated in the image","command ""swupd"" in the image",,,,,,,
TestStep,,,,5,"check product signing key in the image","the public key in the /etc/keys",,,,,,,
TestScript,sstate_hash_change_immune_recipe_update,SCM / Build Tools,Check some recipe variable update will NOT effect sstate hash change,1,"git clone ostro-os repo and run "". oe-init-build-env"" to setup build env","",FVT,ready,"IOTOS-1272",,,,
TestStep,,,,2,"run selftest ""oe-selftest -r sstatetests.SStateTests.test_sstate_noop_samesigs"" ","if the selftest case fail, it should report some sstate sig mismatch. This means the mechanism of recipe problems can be detected. If the case pass, it means the recipe variables change cannot effect the sstate hash",,,,,,,
TestScript,build_esdk_within_esdk,eSDK,eSDK generation from within the eSDK,1,"build esdk by command ""devtool build-sdk""",eSDK can be built out successfully,FVT,ready,IOTOS-1213,,,,
TestScript,install_binary_and_header_file_from_sstate,eSDK,Install the binary and header files from sstate cache,1,"check an library is in sstate by ""devtool search mesa""","mesa should be found from published sstate",FVT,ready,"IOTOS-772",,,,
TestStep,,,,2,"install the library binary and header files: ""devtool sdk-install mesa""","installation success",,,,,,,
TestScript,distribute_sstate_for_individual_component,eSDK,check eSDK can distribute the individual component into sstate cache,1,"add user's component into sstate and publish it: a. devtool add -b usertestlib <user's lib source tree>; b. devtool build usertestlib; c. devtool sdk-install usertestlib","",FVT,ready,"IOTOS-773, IOTOS-1213",,,,
TestStep,,,,2,"publish the user's sstate cache: setup apache server and publish the sstate cache folder","user can access the sstate cache via http/https protocal",,,,,,,
TestStep,,,,3,"in another eSDK environment, add the user's published sstate cache into configure: SSTATE_MIRRORS=files://* http://<user sstate cache URL>/PATH","",,,,,,,
TestStep,,,,4,"install the usertestlib by ""devtool sdk-install usertestlib""","devtool install should be successful",,,,,,,
TestStep,,,,5,"add app (depends on the usertestlib) recipe ""devtool add -b userapp <userapp source tree>""","generate recipe should be successful",,,,,,,
TestStep,,,,6,"build app which depends on usertestlib: ""devtool build <app recipe>""","build the app success without fetch usertestlib source",,,,,,,
TestScript,esdk_image_creation_benchmark,eSDK,Check the functionality of esdk image creation benchmark tool,1,"the benchmark will measure: a. download size; b. disk use; c. image creation time","",FVT,design,IOTOS-1214,,,,
TestScript,esdk_development_benchmark,eSDK,Check the functionality of esdk software development benchmark tool,1,"the benchmark will mearsure: a. download size of build environment; b. download size of building component; c. disk size of build root and metadata; d. build component time with dependency downloads time seperately","",FVT,design,IOTOS-1215,,,,
TestScript,npm_install_mqtt,Application Runtime / Node.js, Check the node module mqtt can be installed via npm,1,Set up the npm on the test device can connect network,The npm can connect network,FVT,design,IOTOS-1160,,,,
TestStep,,,,2,"Run below command under path /tmp: $:npm install mqtt",The folder node_module/mqtt is exists under path /tmp,,,,,,,
TestScript,npm_install_coap,Application Runtime / Node.js, Check the node module coap can be installed via npm,1,Set up the npm on the test device can connect network,The npm can connect network,FVT,design,IOTOS-1161,,,,
TestStep,,,,2,"Run below command under path /tmp: $:npm install coap",The folder node_module/coap is exists under path /tmp,,,,,,,
TestScript,gpio_monitor,Application Runtime / Node.js,Check the methods open and write can work well,1,Download the source code from https://github.com/solettaproject/soletta/blob/master/src/samples/nodejs/gpio_monitor.js to device,,FVT,ready,IOTOS-1152,Edison specific,,,
TestStep,,,,2,"According to the description in the test setup the device",Setup the test environment,,,,,,,
TestStep,,,,3,"Run below command on device: $:node gpio_monitor.js",Open the LED after press the button,,,,,,,
TestScript,spi,Application Runtime / Node.js,Check the method open and transfer can work well,1,Copy the script to device,,FVT,ready,IOTOS-1153,,,,
TestStep,,,,2,"Run the test script on device",No error message on the console,,,,,,,
TestScript,uart_sample,Application Runtime / Node.js,Check the method open and onread and write can work well,1,Copy the script to device,,FVT,ready,IOTOS-1154,Edison specific,,,
TestStep,,,,2,"According to the description in the test setup the device",Setup the test environment,,,,,,,
TestStep,,,,3,"Run the test script on device",The text you type on screen console(host side) should appear on the console at Edison side,,,,,,,
TestScript,i2c_example,Application Runtime / Node.js,Check the method open and write can work well,1,Copy the script to device,,FVT,ready,IOTOS-1155,Edison specific,,,
TestStep,,,,2,"According to the description in the test setup the device",Setup the test environment,,,,,,,
TestStep,,,,3,"Run the test script on device",Print 'HELLO' on Grove LCD,,,,,,,
TestScript,pwm_led,Application Runtime / Node.js,Check the method open and setDutyCycle can work well,1,Download the source code from https://github.com/solettaproject/soletta/blob/master/src/samples/nodejs/pwm_led.js to device,,FVT,ready,IOTOS-1156,Edison specific,,,
TestStep,,,,2,"According to the description in the test setup the device",Setup the test environment,,,,,,,
TestStep,,,,3,"Run below command on device: $:node pwm_led.js",The brightness of an LED form weak to strong in a loop,,,,,,,
TestScript,iotvt_findresource_over_ble,COMMS/Iotivity,Do iotivity resource finding over BLE,1,Follow wiki to build iotivity simpleclient with BLE mode and bitbake it. ,,FVT,ready,IOTOS-534,,,,
TestStep,,,,2,Copy the built simpleclient and simpleserver to two IoT devices.,,,,,,,,
TestStep,,,,3,"Do BLE connection between two IoT devices:
One IoT does BLE advertising: hciconfig hci0 leadv
The other IoT does: hcitool lecc <adv device BT MAC>",hcitool lecc return pass,,,,,,,
TestStep,,,,4,"The advertising device play simpleclient, the other plays simpleserver.",simpleclient should get resource,,,,,,,
